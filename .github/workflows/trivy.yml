# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Trivy. The results are then uploaded to GitHub Code Scanning Alerts

name: Trivy Container Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  # Also run once a week in case any new vulnerabilities are discovered in Deb packages
  schedule:
    - cron: '18 5 * * 1'

jobs:
  trivy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build with Buildkit
      uses: docker/build-push-action@v3
      with:
        tags: this/dockerfile
        load: true
        push: false

    # vuln-type: "os,library" 
    #    Run with os only since Debian packages are not supported by GH Dep Graph. 
    #    We'll run a full Trivy scan to report on those via SARIF GH Code Scan.
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.7.1
      with:
        image-ref: 'this/dockerfile'
        format: 'sarif'
        output: 'trivy-results.sarif'
        vuln-type: 'os'

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: trivy-results.sarif
